{
  "openapi": "3.0.0",
  "info": {
    "title": "RentX Documentation",
    "description": "This is an API Rent",
    "version": "1.0.0",
    "contact": {
      "email": "joaobispo2077@gmail.com"
    }
  },
  "paths": {
    "/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "Get all users",
        "description": "Get all users",
        "operationId": "getUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["User"],
        "summary": "Create a user",
        "description": "Create a new user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/CreateUserPayload"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["User"],
        "summary": "Get a user",
        "description": "Get a user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/definitions/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/specifications": {
      "post": {
        "tags": ["Specification"],
        "summary": "Create a specification",
        "description": "Create a new specification",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Specification"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Specification already exists!"
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a category",
        "description": "Create a new category",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "CategoryText",
                  "description": "This is an awesome category"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Category already exists"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summar": "List all categories",
        "description": "List all categories",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/import": {
      "post": {
        "tags": ["Category"],
        "summary": "Upload categories",
        "description": "Upload new categories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/sessions": {
      "post": {
        "tags": ["Session"],
        "summary": "Authentication user",
        "description": "Authenticate user",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Session"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Email or password is incorrect."
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/cars": {
      "post": {
        "tags": ["Cars"],
        "summary": "Create a new car",
        "description": "Create a new car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/definitions/Car"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    },
    "/cars/{id}/images": {
      "post": {
        "tags": ["Cars"],
        "summary": "Upload a new image",
        "description": "Upload images to a car",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Car id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "images": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "binary"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      }
    }
  },
  "definitions": {
    "CreateUserPayload": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        } 
      },
      "example": {
        "name": "User",
        "email": "john@example.com"
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "admin": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        }
      },
      "example": {
        "name": "User",
        "email": "john@example.com"
      }
    },
    "Specification": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "example": {
        "name": "Specification name",
        "description": "This is an awesome specification"
      }
    },
    "Session": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "example": {
        "email": "email@example.com",
        "password": "*********"
      }
    },
    "Car": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "category_id": {
          "type": "string"
        },
        "license_plate": {
          "type": "string"
        },
        "brand": {
          "type": "string"
        },
        "fine_amount": {
          "type": "number"
        },
        "daily_rate": {
          "type": "number"
        }
      },
      "example": {
        "name": "T5",
        "brand": "Tesla",
        "description": "Carro que anda sozinho vruuum",
        "daily_rate": 60,
        "license_plate": "ABC-1236",
        "fine_amount": 60,
        "category_id": "2a63a730-f9c0-49ae-b83b-f275120a7e3b"
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}